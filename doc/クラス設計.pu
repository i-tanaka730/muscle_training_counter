@startuml

MyApp *-- TrainingListPage
MyApp *-- TrainingInputPage

TrainingListPage  -->  TrainingListViewModel
TrainingInputPage  -->  TrainingInputViewModel

TrainingListViewModel --> TrainingRepository
TrainingInputViewModel --> TrainingRepository
ChangeNotifier <|-- TrainingListViewModel
ChangeNotifier <|-- TrainingInputViewModel

TrainingListViewModel --> TrainingItem
TrainingInputViewModel --> TrainingItem
TrainingRepository --> TrainingItem

class TrainingListViewModel {
  - _repository : TrainingRepository
  - _items : List<TrainingItem>
  + List<TrainingItem> getItems()
  + int getTotalCount()
  + void upCount(String id)
  + void downCount(String id)
}

class TrainingInputViewModel {
  - _repository : TrainingRepository
  _id : String
  _naem : String
  _count : String
  + void addTrainingItem()
  + void updateTraningItem()
  + void deleteTrainingItem(String Name)
}

class TrainingRepository {
  + List<TrainingItem> getAllTrainingItem()
  + void addTrainingItem(String name, [int? count = 0])
  + void updateTrainingItem(String id, [String? name, int? count])
  + void deleteTrainingItem(String id)
}

note left of TrainingRepository
  FireStoreにアクセスして
  データ操作を行う
end note

note right of TrainingRepository::getAllTrainingItem
  FireStoreから取得した
  Snapshotをモデル化して返す
end note

class TrainingItem {
  - id : string
  - name : string
  - count : int
  + String getId()
  + String getName()
  + int getCount()
}

@enduml